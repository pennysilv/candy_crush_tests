"""
Page Object –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é Candy Crush Saga
"""

from appium.webdriver.common.appiumby import AppiumBy
from .base_page import BasePage

class MainMenuPage(BasePage):
    """–ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–ª–∞–≤–Ω—ã–º —ç–∫—Ä–∞–Ω–æ–º –∏–≥—Ä—ã"""
    
    # –õ–æ–∫–∞—Ç–æ—Ä—ã (—Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
    PLAY_BUTTON_LOCATORS = [
        (AppiumBy.XPATH, "//*[contains(@text, 'Play') or contains(@text, 'PLAY')]"),
        (AppiumBy.XPATH, "//*[contains(@content-desc, 'Play') or contains(@content-desc, 'play')]"),
        (AppiumBy.XPATH, "//*[contains(@resource-id, 'play')]"),
        (AppiumBy.XPATH, "//*[contains(@class, 'Button') and contains(@text, 'Play')]"),
    ]
    
    SETTINGS_BUTTON_LOCATORS = [
        (AppiumBy.XPATH, "//*[contains(@content-desc, 'Settings') or contains(@content-desc, 'settings')]"),
        (AppiumBy.XPATH, "//*[contains(@text, 'Settings')]"),
        (AppiumBy.XPATH, "//*[contains(@resource-id, 'settings')]"),
    ]
    
    SHOP_BUTTON_LOCATORS = [
        (AppiumBy.XPATH, "//*[contains(@content-desc, 'Shop') or contains(@content-desc, 'shop')]"),
        (AppiumBy.XPATH, "//*[contains(@text, 'Shop')]"),
        (AppiumBy.XPATH, "//*[contains(@resource-id, 'shop')]"),
    ]
    
    def __init__(self, driver):
        super().__init__(driver)
        
    def is_displayed(self):
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"""
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ª—é–±–æ–≥–æ –∏–∑ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        play_button = self.find_play_button()
        clickable_elements = self.get_all_clickable_elements()
        
        is_displayed = play_button is not None or len(clickable_elements) > 0
        
        if is_displayed:
            print("‚úÖ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è")
        else:
            print("‚ùå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
        return is_displayed
    
    def find_play_button(self):
        """–ù–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É Play —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏"""
        print("üîç –ò—â–µ–º –∫–Ω–æ–ø–∫—É Play...")
        
        for i, (by, value) in enumerate(self.PLAY_BUTTON_LOCATORS):
            element = self.find_element(by, value, timeout=3)
            if element:
                print(f"‚úÖ –ö–Ω–æ–ø–∫–∞ Play –Ω–∞–π–¥–µ–Ω–∞ —Å–ø–æ—Å–æ–±–æ–º {i+1}: {by}={value}")
                return element
                
        print("‚ùå –ö–Ω–æ–ø–∫–∞ Play –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∏ –æ–¥–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º")
        return None
    
    def click_play(self):
        """–ö–ª–∏–∫–Ω—É—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É Play"""
        print("üëÜ –ü—ã—Ç–∞–µ–º—Å—è –∫–ª–∏–∫–Ω—É—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É Play...")
        
        play_button = self.find_play_button()
        if play_button:
            try:
                play_button.click()
                print("‚úÖ –ö–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É Play")
                return True
            except Exception as e:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–∏–∫–Ω—É—Ç—å –Ω–∞ Play: {e}")
                return False
        else:
            print("‚ùå –ö–Ω–æ–ø–∫–∞ Play –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è –∫–ª–∏–∫–∞")
            return False
    
    def find_settings_button(self):
        """–ù–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É Settings"""
        print("üîç –ò—â–µ–º –∫–Ω–æ–ø–∫—É Settings...")
        
        for i, (by, value) in enumerate(self.SETTINGS_BUTTON_LOCATORS):
            element = self.find_element(by, value, timeout=3)
            if element:
                print(f"‚úÖ –ö–Ω–æ–ø–∫–∞ Settings –Ω–∞–π–¥–µ–Ω–∞ —Å–ø–æ—Å–æ–±–æ–º {i+1}")
                return element
                
        print("‚ùå –ö–Ω–æ–ø–∫–∞ Settings –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return None
    
    def click_settings(self):
        """–ö–ª–∏–∫–Ω—É—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É Settings"""
        settings_button = self.find_settings_button()
        if settings_button:
            try:
                settings_button.click()
                print("‚úÖ –ö–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ Settings")
                return True
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∫–ª–∏–∫–∞ –Ω–∞ Settings: {e}")
                return False
        return False
    
    def get_screen_info(self):
        """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —ç–∫—Ä–∞–Ω–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏"""
        info = {
            'clickable_elements_count': len(self.get_all_clickable_elements()),
            'has_play_button': self.find_play_button() is not None,
            'has_settings_button': self.find_settings_button() is not None,
            'screen_size': self.driver.get_window_size()
        }
        
        print(f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç–∫—Ä–∞–Ω–µ:")
        print(f"   - –ö–ª–∏–∫–∞–±–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {info['clickable_elements_count']}")
        print(f"   - –ï—Å—Ç—å –∫–Ω–æ–ø–∫–∞ Play: {info['has_play_button']}")
        print(f"   - –ï—Å—Ç—å –∫–Ω–æ–ø–∫–∞ Settings: {info['has_settings_button']}")
        print(f"   - –†–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞: {info['screen_size']}")
        
        return info
    
    def debug_all_elements(self):
        """–í—ã–≤–µ—Å—Ç–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —ç–∫—Ä–∞–Ω–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏"""
        print("üîß –û—Ç–ª–∞–¥–∫–∞: –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —ç–∫—Ä–∞–Ω–µ")
        
        clickable_elements = self.get_all_clickable_elements()
        
        for i, element in enumerate(clickable_elements):
            try:
                text = element.get_attribute('text') or ''
                content_desc = element.get_attribute('content-desc') or ''
                resource_id = element.get_attribute('resource-id') or ''
                class_name = element.get_attribute('class') or ''
                
                print(f"–≠–ª–µ–º–µ–Ω—Ç {i+1}:")
                print(f"  text: '{text}'")
                print(f"  content-desc: '{content_desc}'")
                print(f"  resource-id: '{resource_id}'")
                print(f"  class: '{class_name}'")
                print("---")
                
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–∞ {i+1}: {e}")
                
        return clickable_elements
