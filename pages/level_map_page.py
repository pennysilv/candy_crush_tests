"""
Page Object –¥–ª—è –∫–∞—Ä—Ç—ã —É—Ä–æ–≤–Ω–µ–π Candy Crush Saga
"""

from appium.webdriver.common.appiumby import AppiumBy
from .base_page import BasePage

class LevelMapPage(BasePage):
    """–ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ä—Ç–æ–π —É—Ä–æ–≤–Ω–µ–π"""
    
    # –õ–æ–∫–∞—Ç–æ—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–∞—Ä—Ç—ã —É—Ä–æ–≤–Ω–µ–π
    LEVEL_BUTTON_LOCATORS = [
        (AppiumBy.XPATH, "//*[contains(@content-desc, 'Level') or contains(@content-desc, 'level')]"),
        (AppiumBy.XPATH, "//*[contains(@text, 'Level') or contains(@text, 'level')]"),
        (AppiumBy.XPATH, "//*[contains(@resource-id, 'level')]"),
        (AppiumBy.XPATH, "//*[contains(@class, 'Button') and @clickable='true']"),
    ]
    
    BACK_BUTTON_LOCATORS = [
        (AppiumBy.XPATH, "//*[contains(@content-desc, 'Back') or contains(@content-desc, 'back')]"),
        (AppiumBy.XPATH, "//*[contains(@text, 'Back')]"),
        (AppiumBy.XPATH, "//*[contains(@resource-id, 'back')]"),
    ]
    
    def __init__(self, driver):
        super().__init__(driver)
        
    def is_displayed(self):
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –∫–∞—Ä—Ç–∞ —É—Ä–æ–≤–Ω–µ–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è"""
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã —É—Ä–æ–≤–Ω–µ–π...")
        
        # –ò—â–µ–º –∫–Ω–æ–ø–∫–∏ —É—Ä–æ–≤–Ω–µ–π
        level_buttons = self.find_level_buttons()
        back_button = self.find_back_button()
        
        is_displayed = len(level_buttons) > 0 or back_button is not None
        
        if is_displayed:
            print("‚úÖ –ö–∞—Ä—Ç–∞ —É—Ä–æ–≤–Ω–µ–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è")
        else:
            print("‚ùå –ö–∞—Ä—Ç–∞ —É—Ä–æ–≤–Ω–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
        return is_displayed
    
    def find_level_buttons(self):
        """–ù–∞–π—Ç–∏ –∫–Ω–æ–ø–∫–∏ —É—Ä–æ–≤–Ω–µ–π"""
        print("üîç –ò—â–µ–º –∫–Ω–æ–ø–∫–∏ —É—Ä–æ–≤–Ω–µ–π...")
        
        all_buttons = []
        for i, (by, value) in enumerate(self.LEVEL_BUTTON_LOCATORS):
            elements = self.find_elements(by, value, timeout=3)
            if elements:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(elements)} –∫–Ω–æ–ø–æ–∫ —É—Ä–æ–≤–Ω–µ–π —Å–ø–æ—Å–æ–±–æ–º {i+1}")
                all_buttons.extend(elements)
                break
                
        if not all_buttons:
            print("‚ùå –ö–Ω–æ–ø–∫–∏ —É—Ä–æ–≤–Ω–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
        return all_buttons
    
    def find_back_button(self):
        """–ù–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥"""
        print("üîç –ò—â–µ–º –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥...")
        
        for i, (by, value) in enumerate(self.BACK_BUTTON_LOCATORS):
            element = self.find_element(by, value, timeout=3)
            if element:
                print(f"‚úÖ –ö–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥ –Ω–∞–π–¥–µ–Ω–∞ —Å–ø–æ—Å–æ–±–æ–º {i+1}")
                return element
                
        print("‚ùå –ö–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return None
    
    def click_first_level(self):
        """–ö–ª–∏–∫–Ω—É—Ç—å –Ω–∞ –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å"""
        print("üëÜ –ü—ã—Ç–∞–µ–º—Å—è –∫–ª–∏–∫–Ω—É—Ç—å –Ω–∞ –ø–µ—Ä–≤—ã–π —É—Ä–æ–≤–µ–Ω—å...")
        
        level_buttons = self.find_level_buttons()
        if level_buttons:
            try:
                level_buttons[0].click()
                print("‚úÖ –ö–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ –ø–µ—Ä–≤—ã–π —É—Ä–æ–≤–µ–Ω—å")
                return True
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∫–ª–∏–∫–∞ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å: {e}")
                return False
        else:
            print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π –¥–ª—è –∫–ª–∏–∫–∞")
            return False
    
    def click_back(self):
        """–ö–ª–∏–∫–Ω—É—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥"""
        back_button = self.find_back_button()
        if back_button:
            try:
                back_button.click()
                print("‚úÖ –ö–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥")
                return True
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∫–ª–∏–∫–∞ –Ω–∞ –ù–∞–∑–∞–¥: {e}")
                return False
        return False
    
    def get_levels_count(self):
        """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π"""
        level_buttons = self.find_level_buttons()
        count = len(level_buttons)
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —É—Ä–æ–≤–Ω–µ–π: {count}")
        return count
    
    def get_map_info(self):
        """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—Ä—Ç–µ —É—Ä–æ–≤–Ω–µ–π"""
        info = {
            'levels_count': self.get_levels_count(),
            'has_back_button': self.find_back_button() is not None,
            'clickable_elements_count': len(self.get_all_clickable_elements())
        }
        
        print(f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ä—Ç–µ —É—Ä–æ–≤–Ω–µ–π:")
        print(f"   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–≤–Ω–µ–π: {info['levels_count']}")
        print(f"   - –ï—Å—Ç—å –∫–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥: {info['has_back_button']}")
        print(f"   - –ö–ª–∏–∫–∞–±–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {info['clickable_elements_count']}")
        
        return info
